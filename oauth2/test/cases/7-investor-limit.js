// Generated by LiveScript 1.3.1
var supertest, assert, superagent, path, fs, bodyParser, NodeRSA;
supertest = require('supertest');
assert = require('assert');
superagent = require('superagent');
path = require('path');
fs = require('fs');
bodyParser = require('body-parser');
NodeRSA = require('node-rsa');
describe('investor limit', function(){
  var investorLimit;
  investorLimit = require('../../example/server').__forTest.investorLimit;
  return it('run callback 20 times at most', function(done){
    var countNext, countEnd, req, res, next, s;
    countNext = 0;
    countEnd = 0;
    req = {
      investorLimit: 20,
      authPass: true,
      params: {
        loanId: 'loan1'
      }
    };
    res = {
      json: function(){
        return ++countEnd;
      }
    };
    next = function(err){
      if (err) {
        console.log(err.stack);
      }
      return ++countNext;
    };
    s = Date.now() % 1000;
    console.log(s);
    if (s > 200) {
      setTimeout(run, 1000 - s);
    } else {
      run();
    }
    function run(){
      console.log(Date.now() % 1000);
      [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29].forEach(investorLimit.bind(null, req, res, next));
      return setTimeout(function(){
        assert.equal(countNext, 20);
        assert.equal(countEnd, 10);
        return done();
      }, 500);
    }
    return run;
  });
});
