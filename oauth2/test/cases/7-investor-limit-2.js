// Generated by LiveScript 1.3.1
var supertest, assert, superagent, path, fs, bodyParser, NodeRSA;
supertest = require('supertest');
assert = require('assert');
superagent = require('superagent');
path = require('path');
fs = require('fs');
bodyParser = require('body-parser');
NodeRSA = require('node-rsa');
describe('investor limit', function(){
  var investorLimit;
  investorLimit = require('../../example/server').__forTest.investorLimit;
  return it('investorLimit2', function(done){
    var countNext, countEnd, req, res, next, s;
    countNext = 0;
    countEnd = 0;
    req = function () {
      return {
        authPass: true,
        params: {
          loanId: 'loan-for-test',
        },
        _forInvestorLimit2Test: {
          maxc: 5,
          maxq: 20,
        },
      };
    };
    res = {
      json: function(){
        return ++countEnd;
      }
    };
    next = function (req) {
      return function(err){
        if (err) {
          console.log(err.stack);
        }
        setTimeout(function () {
          req.onProxyResponse();
          ++countNext;
        }, 500);
      }
    };
    for (var i = 0; i < 40; i++) {
      var r = req();
      investorLimit(r, res, next(r));
    }
    return setTimeout(function(){
      console.log(countNext, 10);
      console.log(investorLimit._tenderQueue.length, 5);
      console.log(investorLimit._working['loan-for-test'], 5);
      console.log(countEnd, 20);
      assert.equal(countNext, 10);
      assert.equal(investorLimit._tenderQueue.length, 5);
      assert.equal(investorLimit._working['loan-for-test'], 5);
      assert.equal(countEnd, 20);
      return done();
    }, 1200);
  });
});
