// Generated by LiveScript 1.3.1
var fs, path, NodeRSA;
var request = require('promisingagent');
fs = require('fs');
path = require('path');
NodeRSA = require('node-rsa');
exports.loadClientsFromRemote = function (remoteUrlPrefix, cb) {
    var rsaFilePath, ref$;
    if (!remoteUrlPrefix) {
        return cb([]);
    }
    rsaFilePath = (ref$ = process.env.NODE_ENV || 'development') === 'development' || ref$ === 'test' || ref$ === 'test-cov'
      ? rsaFilePath = path.join(__dirname, '..', 'test', 'id_rsa_for_test')
      : rsaFilePath = '/home/node/.ssh/id_rsa';
    return fs.readFile(rsaFilePath, 'utf-8', function (err, privatePEM) {
        var key, publicPEM;
        if (err) {
            console.error('you have remoteConfigPrefix in config but errors occured while loading private PEM from ' + rsaFilePath);
            console.error('if you are running oauth-server from your own idc, please change remoteConfigPrefix to false');
            console.error(err.stack);
            process.exit(1);
        }
        key = new NodeRSA(privatePEM.trim().replace(/\r\n/g, '\n'));
        publicPEM = key.getPublicPEM();
        return request.post(remoteUrlPrefix + '/config').type('text').send(publicPEM).end(function (err, r) {
            var ref$, config;
            if (!((ref$ = r.text) != null && ref$.length)) {
                return cb([]);
            }
            config = JSON.parse(key.decrypt(r.text, 'utf-8'));
            return cb((config.clients || []).filter(function (c) {
                return typeof c.expire_at !== 'number' || Date.now() < c.expire_at;
            }));
        });
    });
};
