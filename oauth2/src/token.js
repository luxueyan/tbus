// Generated by LiveScript 1.3.1
var ef, errto, errs, db, ref$, crypt;
ef = require('./ef');
errto = require('errto');
errs = require('errs');
db = require('@cc/redis');
crypt = require('./crypt');
var config = require('config');
exports.geta = function(token, done){
    function denied(){
        return done(errs.create({
            message: 'invalid token',
               code: 'access_denied',
               status: 401
        }));
    }
    return ef(done, bind$(db, 'get'), 'access_token:' + token, function(json){
        var obj, ref$;
        try {
            obj = JSON.parse(json);
        } catch (e$) {}
        if (!obj) {
            return denied();
        }
        if (!(obj.createdAt && ((ref$ = obj.user) != null && ref$.id))) {
            return done(null, obj);
        }
        return ef(done, bind$(db, 'get'), obj.user.id + ":last_change_password", function(lcpstr){
            var lcpts;
            if (!lcpstr) {
                return done(null, obj);
            }
            lcpts = parseInt(lcpstr, 10);
            if (obj.createdAt < lcpts) {
                return denied();
            } else {
                return done(null, obj);
            }
        });
    });
};
exports.puta = function(token, obj, done){
    obj.createdAt = Date.now();
    return db.ttl(token, function(err, ttl){
        if (err || ttl <= 0) {
            return exports.posta(obj, done);
        }
        return db.setex(token, ttl, JSON.stringify(obj), errto(done, done.bind(null, null, token)));
    });
};
exports.posta = function(obj, done){
    obj.createdAt = Date.now();
    return ef(done, crypt.generateToken, function(token){
        return db.setex('access_token:' + token, config.tokenExpireSeconds, JSON.stringify(obj), errto(done, done.bind(null, null, token)));
    });
};
function bind$(obj, key, target){
    return function(){ return (target || obj)[key].apply(obj, arguments) };
}
